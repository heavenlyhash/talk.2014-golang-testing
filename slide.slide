Testing in Go
Safely Enhance Your Confidence Stronger, Naturally!
18:00 22 Oct 2014
Tags: testing, tdd, goconvey, gomn

Eric Myhre
hash@exultant.us
https://polydawn.net/


* First...

http://talks.golang.org/2014/testing.slide

Read at at least through slide 9.
# You can check out the rest of the slides on your own time; they're a little heavy for now and also talk a lot about http.


* golang has built in testing

hello gophers, wannabe gophers, or gopher-curious!

i'm here to talk to you tonight about testing.

i'm not going to talk about why testing, or philosophies of testing, 

i'm just going to assume you're sold on testing.

which is interesting, because golang feels the same way:

testing is a part of the standard library and core toolchain.


* golang testing is a minimal interface


* actually, it's not an interface

- this is probably the worst thing about it

just keep calm and carry on


** golang testing is a minimal interface

what do you actually need to make tests?

- a way to name tests

done: function names


** golang testing is a minimal interface

what do you actually need to make tests?

- a way to make asserts

-- well, no actually.

- a way to make the test fail

`t.Fail()`

use `if assertion { t.Fail() }` to dream of your old xUnit ways


** golang testing is a minimal interface

what do you actually need to make tests?

- a way to run the tests!

`go test`

`go test -v`


** golang testing is a minimal interface

what do you actually need to make tests?

- TODO



* benchmark


* ? talk about race detector


* more advanced (read: prettier) testing with goconvey

the `testing` package, like the `net/http` package, is a GREAT starting point.

it also explicitly doesn't try to solve the world's problems.

it's a minimal interface.


* more advanced (read: prettier) testing with ???

there are lots of others!

- ginkgo
- you can even do gherkin if you're into, well, that.
- ____???____


